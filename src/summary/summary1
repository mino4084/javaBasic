자바는 객체 지향 언어 
- OOP(Object Oriented Programming)

함수적 스타일 코딩 지원
- 람다식(Lambda Expressions)
 
메모리 자동관리
- 사용하지 않는 객체레를 자동으로 메모리에서 제거
- 메모리 관리보다 기능 구현에 더 집중
 
Java SE(Standard Edition)
- JVM
- JDK
- 자바프로그램 개발도구 및 API 정의
 
Java EE(Enterprise Edition)
- 웹 애플리케이션 개발도구 및 API 정의
- WAS

Java ME(Micro Edition)
- 임베디드

멀티 스레드
- 동시 여러가지, 대용량 작업(병렬 처리) -> 멀티 스레드 필요
- 운영체제 별로 멀티 스레드 api가 다르지만 Java는 일관된 생성과 관리 가능

동적 로딩 지원
- 미리 생성하지 않고 필요한 시점에 동적 로딩 및 객채 생성

오픈소스 라이브러리가 많다

Java SE
- JDK(Java Development Kit) = JRE(Java Runtime Enviorment, JVM + 표준클래스 라이브러리) + 개발도구
- 환경변수 설정으로 JDK 위치 알려주기 위해서

.java 소스파일(Hello.java) -(javac.exe 컴파일러)-> .class 바이트 코드 파일(Hello.class) -(java.exe JVM)-> 기계어
- class 파일로 컴파일한 경우 어느 운영체제든 동일하게 사용 가능해진다.

주석
- 프로그램 실행과 상관없다. 
- 컴파일 과정에서 무시. 실행문만 바이트 코드로 번역
- 프로그램 크기가 커지지 않는다.

실행문
- 실행문 끝에 항상 세미콜론(;)를 붙여 끝을 표시

Workspace
- 이클립스에서 생성한 프로젝트가 기본적으로 저장되는 디렉토리
- .metadata 디렉토리 자동생성(이클립스 실행의 필요. 폰트크기 저장 등)
